The Cortex-M3 and Cortex-M4 memory map has a default configuration for memory access permissions. This prevents user programs (non-privileged) from accessing system control memory spaces such as the NVIC. The default memory access permission is used when either no MPU is present or the MPU is present but disabled.

If the MPU is present and enabled, additional access permission rules defined by the MPU setup will also determine whether user accesses are allowed for other memory regions. The default memory access permissions are shown in Table 6.10. When an unprivileged access is blocked, the fault exception takes place immediately. The fault exception can either be a HardFault or BusFault exception, depending on whether the BusFault exception is enabled and the priority level.

memory attributes you can find in the Cortex-M3 and Cortex-M4 processors include the following:
Bufferable: Write to memory can be carried out by a write buffer while the processor continues on to next instruction execution.
Cacheable: Data obtained from memory read can be copied to a memory cache so that next time it is accessed the value can be obtained from the cache to speed up program execution.
Executable: The processor can fetch and execute program code from this memory region.
Sharable: Data in this memory region could be shared by multiple bus masters. The memory system needs to ensure coherency of data between different bus masters in the shareable memory region.

The Sharable memory attribute is needed in systems with multiple processors and multiple cache units with cache coherency control (Figure 6.16). When a data access is indicated as Sharable, the cache controller needs to ensure the value is coherent with other cache units as it could have been cached and modified by another processor.

Though the Cortex-M3 and Cortex-M4 processors do not have a cache memory or cache controller, a cache unit can be added on the microcontroller, which can use the memory attribute information to define the memory access behaviors. In addition, the cache attributes might also affect the operation of memory controllers for on-chip memory and off-chip memory, depending on the memory controllers used by the chip manufacturers.

The Bufferable attribute is used inside the processor. In order to provide better performance, the Cortex-M3 and Cortex-M4 processors support a single entry write buffer on the bus interface. A data write to a bufferable memory region can be carried out in a single clock cycle and continue to the next instruction execution, even if the actual transfer needs several clock cycles to be completed on the bus interface (Figure 6.17).

Cortex-M4 processors, the CODE region memory attribute signals on the processor’s I-CODE and D-CODE bus interface are hardwired to indicate transfers as cacheable and nonbufferable. This cannot be overridden by MPU configuration.

If the memory device has been accessed by another bus master between the exclusive read and the exclusive write, the exclusive access monitor will flag an exclusive fail through the bus system when the processor attempts the exclusive write. This will cause the return status of the exclusive write to be 1. In the case of a failed exclusive write, the exclusive access monitor also blocks the write transfer from getting to the exclusive access address.

For chips with a boot loader ROM, the boot loader is executed when the system is started, so it has to be located in address 0 when the system starts at power up. However, the nexttime the system starts, it might not needto execute the boot loader again and can run the application in the flash directly, so the memory map needs to be changed. In order to do this, the address decoder needs to be programmable. A hardware register (e.g., a peripheral register in a system control unit) can be used, as shown in Figure 6.19.

The operation to switch the memory map is called “Memory Remap.” This operation is done by the boot loader. However, you cannot switch the memory map and branch to the new location of the boot loader at the same time. So a method called alias is used. With memory address alias, the boot loader ROM is accessible from two different memory regions, as shown in Figure 6.20. Normally the boot loader is accessible from address 0 using a memory address alias, and the alias can be turned off. There are many possible memory system configurations. What is shown in Figure 6.20 is just one of the possibilities. In some microcontrollers, memory remapping is not needed as the boot loaders present in address 0 are executed every time the system starts up. The vector table is then relocated using the vector table relocation feature provided by the processor, so there is no need to use any remap to handle vector fetches.
