Embedded trace macrocell (ETM)

The ETM block is used for providing instruction traces. It is optional and might not
be available on some Cortex-M3 and Cortex-M4 products. When it is enabled and
when the trace operation starts, it generates instruction trace packets. A FIFO buffer
is provided in the ETM to allow enough time for the Trace Port Interface Unit
(TPIU) to process and serialize the trace data while the trace stream is being
captured. Figure 14.18 shows instruction trace display in Keil mVision debugger.

To reduce the amount of data generated by the ETM, it does not always output
exactly what address the processor has reached/executed. It usually outputs information about program flow and outputs full addresses only if needed (e.g., if a branch
has taken place). Because the debugging host should have a copy of the binary
image, it can then reconstruct the instruction sequence the processor has carried out.
The ETM also interacts with other debugging components such as the DWT. The
comparators in the DWT can be used to generate trigger events in the ETM or to
control the trace start/stop.
Unlike the ETM in traditional ARM processors, the Cortex-M3 and Cortex-M4
ETM are optimized for low power and therefore do not have their own address comparators, because the DWT can carry out the comparison for ETM.

Trace port interface unit (TPIU)

The TPIU is used to output trace packets from the ITM, DWT, and ETM to the
external capture device (e.g., Keil ULINK2/ULINKPro). The Cortex-M3 and
Cortex-M4 TPIU supports two output modes:
• Clocked mode, using up to 4-bit parallel data output ports
• Serial Wire Viewer (SWV) mode, using a single-bit output called Serial Wire
Output (SWO)
In clocked mode, the actual number of bits being used on the data output port can
be programmed to different sizes. This will depend on the chip package as well as the number of signal pins available for trace output in the application. The maximum
trace port size supported by the chip can be determined from one of the registers in
the TPIU. In addition, the speed of trace data output can also be programmed using a
pre-scaler.
In SWV mode, a 1-bit serial protocol is used and this reduces the number of
output signals to 1, but the maximum bandwidth for trace output will also be
reduced. When combining SWV with Serial-Wire debug protocol, the Test Data
Output (TDO) pin normally used for Joint Test Action Group (JTAG) protocol
can be shared with SWO (Figure 14.19).

Alternatively, the SWVoutput mode can also share a pin with the trace output pin in
clocked mode.

When instruction trace (using ETM) is required, the clocked mode is more suitable than SWV mode as it provides higher trace bandwidth. For a simple data trace
and event trace (e.g., tracing of exception events), the SWV mode is usually sufficient and can be used with fewer connection pins.
The TPIU supports asynchronous clocking on the trace interface (Figure 14.20).
The Trace Port interface or the SWO output can operate at a different clock frequencies compared to the processor. This allows the trace port to operate at a higher
clock frequency than the processor in order to provide higher trace bandwidth.
Another available option on the TPIU is the use of a formatter. The formatter encapsulates the trace data into a format that combines the data and the trace bus ID.
This allows trace streams to be merged and separated by the debug host. When using
SWV mode for trace without ETM, there is only one active trace bus and the
formatter can be switched off to enable higher data throughput.

( important: Trace connection and pin sharing of Serial Wire Output (SWO) )
( TPIU block diagram )