In order to support a wide range of system configuration, CoreSight Design Architecture provides a
mechanism to allow the debugger to automatically locate debug components in the
system, and the ROM table is part of this mechanism.

The Cortex-M3 and Cortex-M4 processors have a pre-defined memory map and
include a number of debug components. However, chip designers can choose to omit
some of the debug components or add additional ones if preferred. To allow debug
tools to detect the debug component configuration in the debug system, a ROM table
is included; it provides information on the System Control Block (SCB) and debug
block addresses.

The ROM table is just a simple look-up table and contains a few entries of
address information, and a few ID registers to allow the debugger to identify it as
a ROM table device. In typical Cortex-M3 or Cortex-M4 systems, the ROM table
is located in address 0xE00FF000. The debugger can identify this primary ROM
table address value from a register in the AHB-AP module when it connects to
the system.
Using the contents of the ROM table, the memory locations of system and debug
components can be calculated. The debug tool can then check the ID registers of the
discovered components and determine what is available on the system.

( important: Table 14.9 Default ROM Table Values in Cortex-M3/M4 )
( important: FIGURE 14.21 Automatic detection of components via CoreSight architecture )

It is also possible to have multiple levels of ROM tables, where the address of a
secondary ROM table can be located using one of the entries in the primary ROM
table. This can often be found in complex SoC devices.
