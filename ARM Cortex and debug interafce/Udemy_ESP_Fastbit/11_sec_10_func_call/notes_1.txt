According to standard, a 'C' function can modify the registers R0, R1, R2, R3, R14 and PSR and it's not the responsibility of the function to save these registers before any modification. That is the job of caller. The caller should PUSH all these registers to the stack and after that POP it back when the function returns.

If a function y wants to make use of R4 to R11 registers, then it's the responsibility of the function to save it's previous contents before modifying those registers and retrieve it back before exiting the function. Let's say y function wants to modify R7. Then, it first have to PUSH R7, then modify R7, then POP R7 before exiting the function. So that, when the control goes back to the caller the R7 value must be intact. R0, R1, R2,R3, R12,R14 registers are called "caller saved registers, R4 to R11 are called "callee saved registers".

caller function uses R0, R1, R2, R3 registers to send input arguments to the callee function. The callee function uses registers R0 and R1 to send the result back to the caller function. Consider here, a function and this function x is calling function y. What function x does is, it copies these values into its internal register R0,R1,R2, R3 and function y copies the register contents back to its local variable. That's how arguments being passed from one function to another during the function call.

When this function, function y, if it wants to return the result then it will always use the register R0. It copies the result to R0. If the result is 64 bits, then what happens is, two registers being used. R0 and R1. So, the higher 32 bits will go here and the lower 32 bits will go here.

But, what if the arguments are more than 4. Function y sends 6 arguments, and let's say there are 6 local variables to receive the arguments. In that case, 4 may be passed through the registers and for the rest stack will be used. First, 4 arguments maybe passed using the registers R0 to R3, and another 2 arguments may be passed through stack memory. But, according to this standard, the input arguments will not be passed using R4 to R12 registers. Always R0 to R3 registers will be used for argument passing and R0 and R1 will be used for return values.

Remember, the callee need not to worry about the contents of R0 or R3, but it should worry about the contents about R4 to R12. 

( at 8:26 in lec 45 )
