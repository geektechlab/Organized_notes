When the TrustZone security feature is implemented, memories for both program storage and data and memories for the Secure and the  Non-secure worlds are needed. If separate memory blocks for Secure and Non-secure memory are used, there is likely to be an increase in cost and power consumption. Because many microcontrollers are designed to be low cost, it is preferable to use a single memory block and partition that into Secure and Non-secure address ranges. The hardware units that deal with the memory address partitioning are referred  to as memory protection controllers (MPC).

In the same way, peripherals need to be partitioned too. Many TrustZone system designs implement peripheral protection controllers (PPC)—a controller that helps Secure software assign some of the peripherals to a Secure or Non-secure state. In theory, if the security domain assignment for peripherals is known in advance, PPCs are not needed because access permissions can be hardwired into the interconnect. However, for many projects, using a fixed security domain assignment for peripherals is unacceptable. For example, with many projects, the design of the software starts after the chips are produced. As a result, the peripheral’s security domain requirement is often unknown when the chip is designed. Therefore, the use of PPCs is needed to provide flexibility. Besides, many chip designs are targeted at multiple applications and, therefore, have very diverse requirements. As a result, PPCs are needed as they provide the required flexibility.

Many microcontrollers have integrated legacy bus master components which are designed for non-TrustZone systems. Chip designers might, therefore, need to place additional components, called Master Security Controllers (MSC), in the system to allow legacy bus master components to connect the bus master units to a TrustZone-based system. When we add MPCs, PPCs, and MSCs to the system design that was  shown in Fig. 6.13, this creates the system design as shown in Fig. 6.14.

( important: FIG. 6.14 TrustZone security components added to the bus system of a high-performance Cortex-M33 system. )

When the TrustZone security extension is implemented and used, security firmware developers will need to include several initialization steps in the Secure firmware (e.g., setting up various units to define memory and peripheral partitioning). These initialization steps should include the programming of the SAU (potentially the IDAU too, if that is designed to be programmable) and system-level security management hardware such as memory protection and peripheral protection controllers. In addition to memory partitioning, there are other configurations require setting up by the Secure firmware. This includes interrupt’s target states and stack limit checking.
