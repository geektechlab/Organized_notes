Recursive header inclusion

A.h
	#ifndef __A__
	#define __A__
	#define max(a,b) (a > b ? a : b)
	int sum (int a, int b); 
	#endif

B.h
	#ifndef __B__
	#define __B__
	#include "A.h"
	#define min(a,b)  (a > b ? b : a)
	int multiply (int a, int b); 
	#endif

app.c
	#include "A.h"
	#include "B.h"
	#define square(x) (x * x)

	int foo(int b);
	int foo(int b) {

	}

	int main(){

	}

here, __A__ and __B__ prevents recursive inclusion of same header files. So, we can use these to avoid such recursive dependencies.