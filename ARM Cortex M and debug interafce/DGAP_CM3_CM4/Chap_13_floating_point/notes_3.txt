In ARMv7-M architecture, the floating point data and operations are based on IEEE Std 754-2008, IEEE Standard for Binary Floating Point Arithmetic. The Floating Point Unit (FPU) in the Cortex-M4 processor is optional and supports single precision floating point calculations, as well as some conversion and memory access functions. The FPU design is compliant with the IEEE 754 standard, but is not a complete implementation. For example, the following operations are not implemented by hardware:
• Double-precision data calculations
• Floating point remainder (e.g., z ¼ fmod (x, y))
• Round floating point number to integer values floating point number
• Binary-to-decimal and decimal-to-binary conversions
• Direct comparison of single-precision and double-precision values

These operations need to be handled by software. The FPU in the Cortex-M4 processor is based on an extension of the ARMv7-M architecture called FPv4-SP (Floating Point version 4 e Single Precision). This is a subset of the VFPv4-D16 extension for ARMv-7A and ARMv7-R architecture (VFP stands for Vector Floating Point). As many floating point instructions are common to both versions, it is common to refer to floating point operations as VFP, and the floating point instruction mnemonics start with the letter “V.”

The floating point design supports:
• A floating point register bank that contains thirty-two 32-bit registers, which can be used as 32 registers, or be used in pairs as 16 double-word registers.
• Single-precision floating point calculations
• Conversion instructions for:
 “integer <-> single-precision floating point”
 “fixed point <-> single-precision floating point”
 “half precision <-> single-precision floating point”
• Data transfers of single-precision and double-word data between floating point register bank and memory
• Data transfer of single-precision between floating point register bank and integer register bank

In the architecture, the FPU is viewed as a co-processor. To be consistent with other ARM architectures, the floating point unit is defined as Co-Processor #10 and #11 in the CPACR programmer’s model (see section 13.2.3). The normal processing pipeline and the floating point unit share the same instruction fetch stage, but the instruction decode and execution stages are separate, as shown in Figure 13.11. For floating point operations and floating point data transfers in the CortexM4 processor, a set of floating point instructions are used instead of co-processor access instructions.

The FPU adds a number of registers to the processor system:
• CPACR (Co-processor Access Control Register) in SCB (System Control Block)
• Floating point register bank
• Floating point Status and Control Register (FPSCR)
• Additional registers in the FPU for floating point operations and control, as shown in Table 13.2.
