The optional TrustZone security extension introduces additional ways to classify memory types. I have already mentioned Secure and Non-secure memories, but there are a further two types. Table 7.1 lists these memory types. The Secure NSC region and the SG instruction provides a mechanism to prevent Nonsecure software from bypassing security checks by branching into the middle of Secure APIs or into other Secure codes. If the Non-secure software does branch into a Secure executable region where either:
• The first instruction is not an SG instruction, or
• The address does not have a Secure NSC attribute then a security violation fault exception is triggered and the result would be either a SecureFault (Armv8-M Mainline only) or a HardFault.

( very important: TABLE 7.1 Memory classification by security attributes. TABLE 7.2 Relationship between memory security attributes and memory types. )

The security attributes of memory ranges are defined by the Security Attribution Unit (SAU). The SAU can work with additional single or multiple custom-defined address lookup hardware units called Implementation Defined Attribution Units (IDAUs). For each memory access (including data read/write, instruction fetches, and debug access), the address is simultaneously looked up in the SAU and the IDAU(s), and the results are then combined. The SAU and the IDAU divide the 4GB address space into regions as described below:
• SAU––The SAU is a part of the Armv8-M processor when the TrustZone security extension is implemented and is programmable by Secure privileged software. In the Cortex-M23 and Cortex-M33 processors, the SAU supports 0, 4, or 8 SAU regions. Each region is defined using a pair of address comparators that compare bus transaction addresses against the starting and ending addresses of an SAU region. If the TrustZone security extension is implemented without an SAU region (i.e., the number of SAU regions is zero), the SAU is still present but with only a control register and an IDAU interface(s) to support the address lookup.
• IDAU––IDAU(s) are designed by chip vendors and vary between different devices. Similar to the SAU, they provide address lookups and generate security attributes of the address being accessed. If they are not designed as programmable, they can be less complex than an SAU. IDAU interfaces on the Cortex-M23 and the Cortex-M33 processors support up to 256 regions. A typical IDAU can be a fixed address lookup table, but can, in some designs also be programmable. If the processor is designed to handle multiple concurrent transfers (as in the Harvard bus architecture), it must have multiple IDAUs and these IDAUs must have consistent security attribute mapping. After the SAU and the IDAU lookup an address, the results are then combined as shown in Fig. 7.1.

Please note:
• An SAU can only define a region as Non-secure or as Secure NSC. If an address is not covered by an SAU region, it is Secure.
• An IDAU can define a region as Secure, Non-secure, Secure NSC, or Exempted.
• Apart from the exempted region type, the merging of Security levels from the SAU and the IDAU will always result in the higher security level being selected. This prevents Secure software from overriding an IDAU setting and exposing critical security information to the Non-secure world.
• Because the SAU is disabled after reset, all address ranges, apart from the exempted regions defined by the IDAU, are, by default, Secure.
• An exempt region setting is always effective: this enables Non-secure debuggers to access debug components and establish a debug connection to the processor before the SAU is setup.

When the TrustZone security extension is implemented and when the SAU is configured without an SAU region, a minimal level of SAU hardware, including the SAU Control Register, is still present in the processor. For highly constrained systems, the design of the architecture allows a TrustZone system to be built with a minimal additional hardware cost using:
• An SAU with no SAU region
• A basic IDAU(s) for address lookup.

a number of TrustZone system management components (Fig. 6.14), for example, the MPC (Memory Protection Controller) and the PPC (Peripheral Protection Controller). These units are needed if the system requires the flexibility to allow the software to assign security attributes. For chip designs with fixed address partitioning, some of these components can be removed. Once the security attribute of the address is defined, and if the bus transaction is permitted by the current security settings, the bus transaction can then be carried out with a bus security attribute (e.g., HNONSEC in AMBA® AHB5) [1] as defined by the security attribute of the address.
