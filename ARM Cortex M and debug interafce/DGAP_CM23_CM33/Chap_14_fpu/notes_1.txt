Key differences between the FPUs of the Cortex-M33 FPU and the Cortex-M4

There are some changes in the floating-point unit of the Cortex-M33 when compared to the
one in the Cortex-M4. These are:
Instruction set: The FPU in the Cortex-M4 is based on FPv4, whereas the one in the CortexM33 is based on the FPv5 architecture, which supports additional data conversions and max
and min comparison instructions. This enables a marginally higher floating-point performance. (For reference, the FPU in the Cortex-M7 processor is also based on the FPv5.)

TrustZone support: TrustZone support in Armv8-M means that Secure software needs to
configure the FPU to decide whether security measures are needed in dealing with the FPU
context. During initialization, Secure software sets up the configuration settings for the FPU.
A range of new configuration bits have been added to the FPU registers ( e.g., FPU->FPCCR,
FPSCR) to support the TrustZone security extension. Some of these configuration registers are
banked between Security states.

Stack limit checking: In Armv8-M, the lazy stacking mechanism is subject to stack limit
checking, with new bit fields being added to the FPCCR to deal with UsageFault and stack
limit violations.
