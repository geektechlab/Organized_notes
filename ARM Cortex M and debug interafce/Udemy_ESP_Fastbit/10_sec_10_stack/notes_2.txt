In full ascending stack operation, first SP value will be incremented then value will be pushed. Let's say, I want to push F3.First SP increments and data will be pushed like that. Here ascending, the word ascending mean SP is incrementing towards higher memory addresses. And the word Full means, here SP is pointing to the last stacked item. That's the reason why we call this as full ascending.

In full descending, as you may be expecting descending means SP will decrease, it will move towards lower memory addresses. That's a reason you have to initialize SP to the higher memory addresses, because it decrements. Let's say, I want to push F2. First SP decrements and then value will be pushed, so like that. That's a reason why it is called full descending and the SP will be pointing to the last stacked item.

In empty ascending as it name indicate ascending, so SP increments. But, SP will be pointing to the current empty location. Let's say, I want to push F2. First, F2 will be occupied in the current empty location and then SP increments. That's why, SP will be always pointing to the current empty location.Let's say I want to push F3, first F3 will be occupied and then SP increments. That's a reason why it is called empty ascending.

Similarly, empty descending, so SP decrements and it will be pointing to the current empty location.

Out of all these 4 ARM Cortex Mx processors use this model full descending stack. You cannot change that.

he conclusion is PUSH operation decrements the stack pointer and POP operation increments the value of stack pointer.
