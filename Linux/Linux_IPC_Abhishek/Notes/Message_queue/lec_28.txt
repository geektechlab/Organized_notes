( at 4:10 in lec 28 )

A message queue IPC mechanism usually supports and adds to one communication paradigm, meaning that there can be an senders but one receiver per message queue. Multiple senders can open the same message queue using message, queue, name and enqueue their respective messages in the same message queue. Receiver process can take a message from the message queue that was placed by different sender processes in the same message queue. However, receiving process can take messages from different message queues at the same time. And this is called multiplexing using select system call.

So here the receiving process can make use of a select system call in order to multiplex on different  message queues at the same time. A message queue can support only one client process at a time. Client can dequeue messages from more than one message queues using select system call. And there is no limitation on server processes.

So let us suppose we have a process A1 and we have a process B which are running on the same machine. And suppose the process A1 has created a message queue inside an operating system and the process a one has queued up messages. Message one message to  three and message 4 in the message queue. And the process be on the receiving side, simply decoding these messages from the message queue. So it's a fairly simple example of message queue usage. Now suppose there are two other processes in the system that is the process A2 and the process A3. So both of these processes are also the sender processes and they are using the same message queue in order to ensure their respective messages to the message queue. So at this point of time, the three processes that is the process, a one process, a two and process, a three are encoding their messages respectively to the same message queue. The process B on the receiving side, on the other hand, is happily dequeuing the messages from the message queue as they are coming.

But suppose there is some other process C that is running on the same machine and it also wants to dequeue the message from the message queue besides process B. So this functionality is not supported by Linux operating system. Only one process can take a message from the message queue. Two or more than two processes cannot take a message from the message queue at the same time. So using message queue as an IPC, the same message cannot be delivered to multiple receivers at the same time. So this is the limitation of message queue as an IPC.

However, it is possible that a same receiving process can receive or a message from different message queues at the same time. For example, process B is already dequeuing a message from this message queue and it is also possible that the process b can also take a message from another message queue. Same message queue to. So this functionality is supported. But what is not supported is two or more than two Receiving processes cannot dequeue the message from the same message queue at the same time.
