select system calls allows the server machine to monitor Multiple clients connected connections and check which client has sent the data to the process. So Select system call is used to monitor multiple clients which are already connected with the server and using select system call, the server keeps monitoring the multiple clients connections and Check that which client has sent data and which client needs a service.

So you can understand it like this suppose there is a client C1 There is a client C2 and there is a client C3. All these clients are connected to the server Right. So all these clients that is C 1 C 2 C 3 are already connected with the server S so at any point of time the client C 1 can send a data to the server S, a client C 2 can send data to the server S or a client C 3 can send a data to the server S so using select system call the server S Monitors the corrections of the client C 1 C 2 and C 3 at the same time That is in whatever order or in whatever sequence any of these clients sends a data to the server S. the server S will be in a position to Identify that which client has sent a data and which client needs a service.

so select system call helps the server S to achieve Simultaneous monitor of connected clients In addition, suppose there is a client C 4 which is not connected to the server S but sends a new connection initiation request to the server S, So using select system call the server S not only can monitor the existing connected clients But it can also monitor the new connection initiation request that is sent by the new client to the server Right so select system call is actually used to monitor multiple file descriptors So you can relate it to this example that just like in a class the monitor That is the class monitor keeps an eye on all the students of the class at the same time.

using select system call, the server also keeps an eye on all the file descriptors of connected clients as well, as it also monitor the arrival of new connection initiation requests from new clients and appropriately Server S can take an action. Select system call is a Blocking system call that is the moment the server calls the Select system call, the Select system call gets blocked So blocking system call means that when the Select system call is executed the code execution halts. for example, You may have written your own small programs in which you have in which you must have used some functions like scanf or getch and you must have experienced that the call to these functions actually halt the execution of a program Similarly the Select system call also blocks the execution of a program So such calls are called as blocking system call and select system call is one such blocking system call. Select system call and blocks when either of the two things happen on the server side that is either a server receives the new connection requests from new client that is when the new client c4 sends the new connection initiation requests to the server S. The server S unblocks from the Select system call So this is the scenario one and the server S unblocks from the Select system call when data request from existing connected client arrives so this is the scenario with client c1 c2 and c3 . So the server unblocks from the select system call when either the event one happens or either the event two happens.

so when select system call unblocks server needs to check whether it's a new connection request orNew data request on existing connection, right? So in the latter case server needs to find which client has sent the data  because the server can unblock from the select system call when either the client c2 has sent the data Or when the client c3 has sent the data So when the server s unblocks from the select system call it has to identify That it is unblocked from the select system call because of which client So when server starts the first thing it does is to create a master socket. a socket to detect arrival of new connection requests from new client.

So this master socket once it is created by the server It is used to gives birth to rest of the communication file descriptor for the clients We have already visualized this scenario in the introductory lecture of this module So C provides a predefined data structure called fd_set which is a collection of file descriptors. so you can define the variable reafds_set of data type fd_set So fd_set is actually Data type that is provided by standard C API s and it is used as a collection of file descriptors So remember file descriptors are simple integers So fd_set is nothing, but it is a collection of file descriptors, which the server is maintaining

C provides a data structure called fd_set Which is actually a collection or a set of file descriptors So the data type is fd_set and Reafds is actually a variable. So in socket programming in C We need to use this data structure to maintain our file descriptors So as we said that fd_set is actually a Collection so you can visualize this data structure as a collection. So initially let us assume that this collection is empty now suppose you have a server s and there is a client C 1 which sends connection initiation requests to the server s . So the server s will invoke the accept system call and create a communication file descriptor for client C 1. let this communication file descriptor is 6 So 6 will be added to the reafds set
