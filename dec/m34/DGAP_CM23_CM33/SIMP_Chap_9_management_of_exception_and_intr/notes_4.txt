In some applications, the vector table would need to be relocated to a different address. For
example:
• Relocating the vector table from flash to SRAM allows for a faster access speed (this can
potentially help reduce interrupt latency).
• Relocating the vector table from flash to SRAM allows for some of the exception vectors to
be dynamically changed during the execution of a program.
• When a program image (which has its own vector table) is loaded from an external source
to RAM.

When updating exception vectors in the vector table, the bit 0 of the vector must be set to 1
(see Section 8.6). Taking this into account and referring to the above example, because the
label of the “new_timer0_handler” is recognized as a function address by the compiler, the
bit 0 of its vector address value is automatically set to 1. But, if you need to change an exception vector with an address that is not generated by means of a function address, additional
address manipulation might be need to force the bit 0 of the address to 1.

The following points need to be considered when relocating the vector table:
• The starting address of the vector table must be a multiple of 128 for the Cortex-M33.
This multiplication requirement is because the starting
address of the vector table is indicated by the Vector Table Offset Register (VTOR). And in
the VTOR register, some of the lowest bits are not implemented, resulting in the
aforementioned 128 bytes/256 bytes alignment requirement. The implemented and
unimplemented bits in the VTOR are as follows:
• In the Cortex-M33 processor, the implemented bits are from bit 7 to bit 31, and the
unimplemented bits (i.e., tied to 0) are bits 0–6.
As a result, the starting address of the vector table must match the alignment
characteristic of the address value in the VTOR.
• A data memory barrier would need to be executed after the vector table was updated to
ensure that all subsequent operations used the new vector table (Even when an SVC
instruction is executed immediately after the vector table was updated, the new vector
configurations would still be used).
• A vector table would need to be placed in the address range for the corresponding security
domain, i.e., the Secure vector table must be placed in a Secure address and the Non-secure
vector table in a Non-secure address.
